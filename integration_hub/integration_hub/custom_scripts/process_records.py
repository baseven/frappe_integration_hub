# üîπ –ò–º—è —Å—É—â–Ω–æ—Å—Ç–∏ Frappe
doctype_name = "test_rec_flow"

# –ò–º—è –ø–æ—Ç–æ–∫–∞ Integration Flow
flow_name = frappe.form_dict.get("flow_name")

# –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø–∏—Å–∏ –∫–∞–∫ JSON
records_raw = frappe.form_dict.get("records") or "[]"

try:
	records = json.loads(records_raw) if isinstance(records_raw, str) else records_raw
except json.JSONDecodeError:
	frappe.throw("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ records: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON")

# –°–ø–∏—Å–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π (–¥–ª—è –ª–æ–≥–æ–≤)
processed_entries = []

for record in records:
	if not isinstance(record, list) or any(not isinstance(kv, list) or len(kv) != 2 for kv in record):
		processed_entries.append(f"–ü—Ä–æ–ø—É—â–µ–Ω–∞ –∑–∞–ø–∏—Å—å {record}: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
		continue

	# –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–ø–∏—Å–æ–∫ –ø–∞—Ä [[–∫–ª—é—á, –∑–Ω–∞—á–µ–Ω–∏–µ], [–∫–ª—é—á, –∑–Ω–∞—á–µ–Ω–∏–µ]] –≤ —Å–ª–æ–≤–∞—Ä—å
	record_data = {kv[0]: kv[1] for kv in record}

	# –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω—É–∂–Ω—ã–µ –ø–æ–ª—è. –ù–∞–∑–≤–∞–Ω–∏—è –≤ () —É–∫–∞–∑—ã–≤–∞–µ–º, –∫–∞–∫ –æ–Ω–∏ –µ—Å—Ç—å –≤ 1–°.
	# –°–ø–∏—Å–æ–∫ –ø–æ–ª–µ–π –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ "–ü–æ–ª—è –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏" —É –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ Integration Flow (flow_name).
	ref_key = record_data.get("Ref_Key")
	description = record_data.get("Description")
	gender = record_data.get("–ü–æ–ª")  # –ù–æ–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä "–ü–æ–ª"

	# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø–æ–ª—è. –ï—Å–ª–∏ –ø–æ–ª–µ–π –Ω–µ—Å–∫–æ–ª—å–∫–æ, —Ç–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É.
	# –≠—Ç–æ —Å–º–æ—Ç—Ä–∏–º —É –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—É—â–Ω–æ—Å—Ç–∏ Frappe (doctype_name).
	if not ref_key:
		processed_entries.append(f"–ü—Ä–æ–ø—É—â–µ–Ω–∞ –∑–∞–ø–∏—Å—å {record_data}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç Ref_Key")
		continue

	# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –∑–∞–ø–∏—Å—å –≤ Frappe
	existing_record = frappe.db.exists(doctype_name, {"ref_key": ref_key})

	if existing_record:
		# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∑–∞–ø–∏—Å–∏.
		# –ü–æ–ª—è record_doc –¥–æ–ª–∂–Ω—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –ø–æ–ª—è–º –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—É—â–Ω–æ—Å—Ç–∏ Frappe (doctype_name)
		record_doc = frappe.get_doc(doctype_name, existing_record)
		record_doc.description = description
		record_doc.gender = gender
		record_doc.save(ignore_permissions=True)
		processed_entries.append(f"–û–±–Ω–æ–≤–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å: {record_data}")
	else:
		# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏
		# –ü–æ–ª—è record_doc –¥–æ–ª–∂–Ω—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –ø–æ–ª—è–º –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—É—â–Ω–æ—Å—Ç–∏ Frappe (doctype_name)
		record_doc = frappe.new_doc(doctype_name)
		record_doc.ref_key = ref_key
		record_doc.description = description
		record_doc.gender = gender
		record_doc.insert(ignore_permissions=True)
		processed_entries.append(f"–°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –∑–∞–ø–∏—Å—å: {record_data}")

frappe.db.commit()

frappe.response["message"] = {
	"success": True,
	"message": f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {len(processed_entries)} –∑–∞–ø–∏—Å–µ–π –¥–ª—è –ø–æ—Ç–æ–∫–∞ {flow_name}",
	"processed_records": processed_entries
}
